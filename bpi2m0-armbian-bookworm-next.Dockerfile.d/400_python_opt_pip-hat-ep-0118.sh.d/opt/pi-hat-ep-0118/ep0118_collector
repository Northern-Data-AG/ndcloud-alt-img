#!/opt/pi-hat-ep-0118/bin/python3

import glob
import re
import sys

from ina219 import INA219
from ina219 import DeviceRangeError
SHUNT_OHMS = 0.05

print ('# HELP ina210_voltage_V regulated voltage')
print ('# TYPE ina210_voltage_V gauge')
print ('# HELP ina210_current_A drawn voltage')
print ('# TYPE ina210_current_A gauge')
print ('# HELP ina210_power_W drawn power')
print ('# TYPE ina210_power_W gauge')
print ('# HELP ina210_supply_voltage_V voltage from power supply')
print ('# TYPE ina210_supply_voltage_V gauge')
print ('# HELP ina210_shunt_voltage_V shunt voltage')
print ('# TYPE ina210_shunt_voltageV gauge')

if __name__=="__main__":
  # collect data
  result_set = {}
  for i2c_dev_dir in glob.glob('/sys/bus/i2c/devices/i2c-[0-9]*'):
    match = re.search('^/.*/i2c-([0-9]+)$', i2c_dev_dir)
    if match:
      bus_id = int(match.group(1))
    else:
      continue
  
    try:
      ina = INA219(SHUNT_OHMS, busnum = bus_id)
      ina.configure()
    except DeviceRangeError as e:
      print(e)
    
    print('# debug found ina219 on %s', bus_id)

    print('ina210_voltage_V{bus="%s"} %.3f'        % (bus_id, ina.voltage() )          )
    print('ina210_current_A{bus="%s"} %.3f'        % (bus_id, ina.current()/1000 )     )
    print('ina210_power_W{bus="%s"} %.3f'          % (bus_id, ina.power() )            )
    print('ina210_supply_voltage_V{bus="%s"} %.3f' % (bus_id, ina.supply_voltage() )   )
    print('ina210_shunt_voltage_V{bus="%s"} %.3f'  % (bus_id, ina.shunt_voltage()/1000))

    # we have not more than one device
    break

# vim: et ts=2 sw=2
